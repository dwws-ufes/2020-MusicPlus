package br.ufes.informatica.musicplus.core.controller;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.inject.Model;

import java.util.Date;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.musicplus.core.application.ArtistaService;
import br.ufes.informatica.musicplus.core.application.MusicaService;
import br.ufes.informatica.musicplus.core.domain.Artista;
import br.ufes.informatica.musicplus.core.domain.Musica;
import br.ufes.informatica.musicplus.core.domain.TipoGenero;
import br.ufes.informatica.musicplus.core.domain.TipoIdioma;
import br.ufes.informatica.musicplus.core.domain.TipoPais;

@Model
public class CadastroController extends JSFController {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;
	

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private ArtistaService artistaService;
	
	@EJB
	private MusicaService musicaService;

	private String nome;
	
	private Date duracao;

	private Date dataDeLancamento ;

	private TipoIdioma[] todosOsIdiomas;

	private TipoIdioma[] idiomasEscolhidos;

	private TipoPais nacionalidade;
	
	private TipoPais[] todosOsPaises;
	
	private TipoGenero[] generosEscolhidos;

	private TipoGenero[] todosOsGeneros ;
	
	private int numVezesFavoritado;
	
	@PostConstruct
	public void init() {
		todosOsGeneros = TipoGenero.todosMenosQualquerUm();
		todosOsPaises = TipoPais.todosMenosQualquerUm();
		todosOsIdiomas = TipoIdioma.todosMenosQualquerUm();
		numVezesFavoritado = 0;
	}


	public void setNome(String nome) {
		this.nome = nome;
	}

	public void setDuracao(Date duracao) {
		this.duracao = duracao;
	}

	public void setDataDeLancamento(Date dataDeLancamento) {
		this.dataDeLancamento = dataDeLancamento;
	}

	public void setIdiomasEscolhidos(TipoIdioma[] idiomasEscolhidos) {
		this.idiomasEscolhidos = idiomasEscolhidos;
	}

	public void setNacionalidade(TipoPais nacionalidade) {
		this.nacionalidade = nacionalidade;
	}

	public void setGenerosEscolhidos(TipoGenero[] generosEscolhidos) {
		this.generosEscolhidos = generosEscolhidos;
	}

	public void setNumVezesFavoritado(int numVezesFavoritado) {
		this.numVezesFavoritado = numVezesFavoritado;
	}
	
	public Date getDuracao() {
		return duracao;
	}
	
	public Date getDataDeLancamento() {
		return dataDeLancamento;
	}

	public TipoIdioma[] getIdiomasEscolhidos() {
		return idiomasEscolhidos;
	}
	
    public TipoGenero[] getTodosOsGeneros() {
        return todosOsGeneros;
    }
    
    public TipoPais[] getTodosOsPaises() {
        return todosOsPaises;
    }
    
    public TipoIdioma[] getTodosOsIdiomas() {
        return todosOsIdiomas;
    }
    
    public int getNumVezesFavoritado() {
		return numVezesFavoritado;
	}

	public TipoGenero[] getGenerosEscolhidos() {
        return generosEscolhidos;
    }
    
    public TipoPais getNacionalidade() {
    	return nacionalidade ;
    }
    
    public String getNome() {
    	return nome ;
    }

	public String salvarArtista() {
    	Artista artista = new Artista();
    	for (TipoGenero g : generosEscolhidos) {
    		artista.addGenero(g);
    	}
    	artista.setNacionalidade(nacionalidade);
    	artista.setNome(nome);
    	artista.setNumVezesFavoritado(numVezesFavoritado);
    	artistaService.save(artista);
    	return "/index.xhtml" ;
    }
    
    public String salvarMusica() {
    	Musica musica = new Musica();
    	for (TipoGenero g : generosEscolhidos) {
    		musica.addGenero(g);
    	}
    	for (TipoIdioma i : idiomasEscolhidos) {
    		musica.addIdioma(i);
    	}
    	musica.setNome(nome);
    	musica.setNumVezesFavoritado(numVezesFavoritado);
    	musica.setDataLancamento(dataDeLancamento);
    	musica.setDuracao(duracao);
    	musicaService.save(musica);
    	return "/index.xhtml" ;

    }
}
