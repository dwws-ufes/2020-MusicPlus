package br.ufes.informatica.musicplus.core.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.enterprise.inject.Model;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.musicplus.core.application.ArtistaService;
import br.ufes.informatica.musicplus.core.application.MusicaService;
import br.ufes.informatica.musicplus.core.application.SugestaoService;
import br.ufes.informatica.musicplus.core.domain.Artista;
import br.ufes.informatica.musicplus.core.domain.Musica;
import br.ufes.informatica.musicplus.core.domain.TipoGenero;
import br.ufes.informatica.musicplus.core.domain.TipoIdioma;

/** TODO: generated by FrameWeb. Should be documented. */
@Model
@SessionScoped
public class MusicaController extends JSFController {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private MusicaService musicaService;
	
	@EJB
	private ArtistaService artistaService;
	
	@EJB
	private SugestaoService sugestaoService ;
	
	/** TODO: generated by FrameWeb. Should be documented. */
	private String nomeDoArtista;

	private Artista artistaEscolhido ;
	
	private Musica musicaEscolhida ;

	private TipoIdioma[] idiomasEscolhidos;
	
	private TipoGenero[] generosEscolhidos;

	/** TODO: generated by FrameWeb. Should be documented. */
	private String nomeDaMusica;

	/** TODO: generated by FrameWeb. Should be documented. */
	private List<Musica> musicas;
	
	private Boolean desabilitarBotao ;
	
	private Integer numSugestoes;
	
	private String porRankingOuAleatorio;

	private boolean allGeneros ;
	
	private boolean allIdiomas ;

	private boolean warningVazioGenero ;
	
	private boolean warningVazioIdioma ;
	
	private TipoIdioma[] todosOsIdiomas;
	
	private TipoGenero[] todosOsGeneros ;
	
	@PostConstruct
	public void init() {
		todosOsGeneros = TipoGenero.todos();
		todosOsIdiomas = TipoIdioma.todos();
		musicas = null ;
		auxClean() ;
	}
	
	public void habilitaBotao() {
		if (nomeDoArtista != null || nomeDaMusica != null) {
			desabilitarBotao = false ;
		}
	}
	
	public void auxClean() {
		allGeneros = true ;
		allIdiomas = true; 
		idiomasEscolhidos = todosOsIdiomas ;
		generosEscolhidos = todosOsGeneros ;
		numSugestoes = null; 
		warningVazioGenero = false ;
		warningVazioIdioma = false ;
		nomeDoArtista = null ;
		nomeDaMusica = null ;
		desabilitarBotao = true ;
		artistaEscolhido = null ;
	}	
	
	public String buscarMusica() {
		if (nomeDoArtista == null) {
			musicas = musicaService.buscarPorNome(nomeDaMusica);
		}
		List<Artista> artistas = artistaService.buscarPorNome(nomeDoArtista);
		if (nomeDaMusica == null) {
			musicas = musicaService.buscarPorArtistas(artistas);
		}else {
			musicas = musicaService.buscarMusica(nomeDaMusica, artistas) ;
		}
		return musicasEncontradas();
	}
	
	public String musicasEncontradas() {
		return "/core/buscar/MusicasEncontradas.xhtml?faces-redirect=true" ;
	}
	
	public void habilitarBotao() {
		desabilitarBotao = false ;
	}
	
	public String buscarMusicaPorArtista() {
		musicas = musicaService.buscarPorArtista(artistaEscolhido); 
		return musicasEncontradas() ;
	}
	
	
	public void escolherTodosOsGeneros() {
		if (allGeneros == true) {
			generosEscolhidos = todosOsGeneros ;
			warningVazioGenero = false ;
		}else {
			generosEscolhidos = null ;
			warningVazioGenero = true ;
		}
	}
	
	public void dispensarTodosOsGeneros() {
		warningVazioGenero = true ;
		allGeneros = false ;
		if (generosEscolhidos == null) {
			return ;
		}
		if (generosEscolhidos.length == 0) {
			return ;
		}
		warningVazioGenero = false ;
		allGeneros = true ;
		if (generosEscolhidos.length != todosOsGeneros.length) {
			allGeneros = false ;
		}
		return ;
	}
	
	public void escolherTodosOsIdiomas() {
		if (allIdiomas == true) {
			idiomasEscolhidos = todosOsIdiomas ;
			warningVazioIdioma = false ;
		}else {
			idiomasEscolhidos = null ;
			warningVazioIdioma = true ;
		}
	}
	
	public void dispensarTodosOsIdiomas() {
		warningVazioIdioma = true ;
		allIdiomas = false ;
		if (idiomasEscolhidos == null) {
			return ;
		}
		if (idiomasEscolhidos.length == 0) {
			return ;
		}
		warningVazioIdioma = false ;
		allIdiomas = true ;
		if (idiomasEscolhidos.length != todosOsIdiomas.length) {
			allIdiomas = false ;
		}
		return ;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	public String pedirSugestaoMusica() {
		if (warningVazioGenero || warningVazioIdioma) {
			musicas = null ;
		}else {
			List<TipoIdioma> idiomas = new ArrayList<TipoIdioma>(); 
			for (TipoIdioma p : idiomasEscolhidos) {
				idiomas.add(p);
			}
			List<TipoGenero> generos = new ArrayList<TipoGenero>(); 
			for (TipoGenero g : generosEscolhidos) {
				generos.add(g);
			}
			musicas = sugestaoService.pedirSugestaoMusica(porRankingOuAleatorio, idiomas, allIdiomas, numSugestoes, generos, allGeneros);
		}
		return musicasEncontradas() ;
	}
	
	
	//SÃ³ getters e setters a partir daqui


	public Musica getMusicaEscolhida() {
		return musicaEscolhida;
	}

	public void setMusicaEscolhida(Musica musicaEscolhida) {
		this.musicaEscolhida = musicaEscolhida;
	}
	
	public Boolean getDesabilitarBotao() {
		return desabilitarBotao;
	}

	public void setDesabilitarBotao(Boolean desabilitarBotao) {
		this.desabilitarBotao = desabilitarBotao;
	}
	
	public Artista getArtistaEscolhido() {
		return artistaEscolhido;
	}

	public void setArtistaEscolhido(Artista artistaEscolhido) {
		this.artistaEscolhido = artistaEscolhido;
	}
	
	/** Getter for nomeDoArtista. */
	public String getNomeDoArtista() {
		return nomeDoArtista;
	}

	/** Setter for nomeDoArtista. */
	public void setNomeDoArtista(String nomeDoArtista) {
		this.nomeDoArtista = nomeDoArtista;
	}

	/** Getter for nomeDaMusica. */
	public String getNomeDaMusica() {
		return nomeDaMusica;
	}

	/** Setter for nomeDaMusica. */
	public void setNomeDaMusica(String nomeDaMusica) {
		this.nomeDaMusica = nomeDaMusica;
	}

	public List<Musica> getMusicas() {
		return musicas;
	}

	public void setMusicas(List<Musica> musicas) {
		this.musicas = musicas;
	}

	public TipoIdioma[] getIdiomasEscolhidos() {
		return idiomasEscolhidos;
	}

	public void setIdiomasEscolhidos(TipoIdioma[] idiomasEscolhidos) {
		this.idiomasEscolhidos = idiomasEscolhidos;
	}

	public TipoGenero[] getGenerosEscolhidos() {
		return generosEscolhidos;
	}

	public void setGenerosEscolhidos(TipoGenero[] generosEscolhidos) {
		this.generosEscolhidos = generosEscolhidos;
	}
	
	public Integer getNumSugestoes() {
		return numSugestoes;
	}

	public void setNumSugestoes(Integer numSugestoes) {
		this.numSugestoes = numSugestoes;
	}

	public String getPorRankingOuAleatorio() {
		return porRankingOuAleatorio;
	}

	public void setPorRankingOuAleatorio(String porRankingOuAleatorio) {
		this.porRankingOuAleatorio = porRankingOuAleatorio;
	}

	public boolean isAllGeneros() {
		return allGeneros;
	}

	public void setAllGeneros(boolean allGeneros) {
		this.allGeneros = allGeneros;
	}

	public boolean isAllIdiomas() {
		return allIdiomas;
	}

	public void setAllIdiomas(boolean allIdiomas) {
		this.allIdiomas = allIdiomas;
	}

	public boolean isWarningVazioGenero() {
		return warningVazioGenero;
	}

	public void setWarningVazioGenero(boolean warningVazioGenero) {
		this.warningVazioGenero = warningVazioGenero;
	}

	public boolean isWarningVazioIdioma() {
		return warningVazioIdioma;
	}

	public void setWarningVazioIdioma(boolean warningVazioIdioma) {
		this.warningVazioIdioma = warningVazioIdioma;
	}

	public TipoIdioma[] getTodosOsIdiomas() {
		return todosOsIdiomas;
	}

	public void setTodosOsIdiomas(TipoIdioma[] todosOsIdiomas) {
		this.todosOsIdiomas = todosOsIdiomas;
	}

	public TipoGenero[] getTodosOsGeneros() {
		return todosOsGeneros;
	}

	public void setTodosOsGeneros(TipoGenero[] todosOsGeneros) {
		this.todosOsGeneros = todosOsGeneros;
	}

}