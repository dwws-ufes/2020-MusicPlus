package br.ufes.informatica.musicplus.core.controller;

import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.enterprise.inject.Model;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.musicplus.core.application.LoginService;
import br.ufes.informatica.musicplus.core.application.PlaylistService;
import br.ufes.informatica.musicplus.core.domain.Musica;
import br.ufes.informatica.musicplus.core.domain.Playlist;
import br.ufes.informatica.musicplus.core.domain.TipoUsuario;
import br.ufes.informatica.musicplus.core.domain.Usuario;

/** TODO: generated by FrameWeb. Should be documented. */
@Model
@SessionScoped
public class PlaylistController extends JSFController {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private PlaylistService playlistService;
	
	@EJB
	private LoginService loginService ;
	
	/** TODO: generated by FrameWeb. Should be documented. */
	private Musica musicaAtual;

	/** TODO: generated by FrameWeb. Should be documented. */
	private Playlist playlist;

	/** TODO: generated by FrameWeb. Should be documented. */
	private Usuario usuarioLogado;

	private String nome ;
	
	/** TODO: generated by FrameWeb. Should be documented. */
	public String adicionarMusicaNaPlaylist() {
		// FIXME: auto-generated method stub
		return null;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	public String criarPlaylist() {
		usuarioLogado = loginService.getCurrentUser() ;
		if (playlistService.buscarPorNome(usuarioLogado, nome) == null) {
			playlistService.criarPlaylist(usuarioLogado, nome);
			return "/core/playlist/sucessoPlaylistCriada.xhtml";
		}else {
			return "/core/playlist/erroAoCriar.xhtml";
		}
	}
	
	public String redirecionarCadastro() {
		return "/core/playlist/criarPlaylist.xhtml";
	}
	
	public String redirecionarBuscarMusicas() {
		return "/core/buscar/Musica.xhtml";
	}

	public String redirecionarHome() {
		return "/core/home/index.xhtml";
	}
	
	/** Getter for musicaAtual. */
	public Musica getMusicaAtual() {
		return musicaAtual;
	}

	/** Setter for musicaAtual. */
	public void setMusicaAtual(Musica musicaAtual) {
		this.musicaAtual = musicaAtual;
	}

	/** Getter for playlist. */
	public Playlist getPlaylist() {
		return playlist;
	}

	/** Setter for playlist. */
	public void setPlaylist(Playlist playlist) {
		this.playlist = playlist;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

}