package br.ufes.informatica.musicplus.core.persistence;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import br.ufes.inf.nemo.jbutler.ejb.persistence.BaseJPADAO;
import br.ufes.informatica.musicplus.core.domain.Artista;
import br.ufes.informatica.musicplus.core.domain.Musica;
import br.ufes.informatica.musicplus.core.domain.Musica_;
import br.ufes.informatica.musicplus.core.domain.TipoGenero;
import br.ufes.informatica.musicplus.core.domain.TipoIdioma;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class MusicaDAOJPA extends BaseJPADAO<Musica> implements MusicaDAO {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	private static final Logger logger = Logger.getLogger(MusicaDAOJPA.class.getCanonicalName());

	/** TODO: generated by FrameWeb. Should be documented. */
	@PersistenceContext
	private EntityManager entityManager;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	protected EntityManager getEntityManager() {
		return entityManager;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Musica> buscarPorNome(String nome) {
		// FIXME: auto-generated method stub
		logger.log(Level.FINE, "Recuperando as musicas cujo nome contem \"{0}\"...", nome);
		
		// Constructs the query over the Musica class.
		CriteriaBuilder cb = entityManager.getCriteriaBuilder();
		CriteriaQuery<Musica> cq = cb.createQuery(Musica.class);
		Root<Musica> root = cq.from(Musica.class);

		// Filters the query with the nome.
		cq.where(cb.like(cb.lower(root.get(Musica_.nome)), "%" + nome.toLowerCase() + "%"));
		List<Musica> result = entityManager.createQuery(cq).getResultList();
		logger.log(Level.INFO, "Recuperação das musicas cujo nome contem \"{0}\" retornou \"{1}\"", new Object[] { nome, result });
		return entityManager.createQuery(cq).getResultList();	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Musica> buscarPorArtista(Artista artista) {
		// FIXME: auto-generated method stub
		return null;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Musica> buscarPorGenero(TipoGenero genero) {
		// FIXME: auto-generated method stub
		return null;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Musica> buscarPorIdioma(TipoIdioma idioma) {
		// FIXME: auto-generated method stub
		return null;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Musica> buscarGeral(String nomeDaMusica, String nomeDoArtista, TipoGenero genero, TipoIdioma idioma,
			Boolean ranking, Integer numero) {
		// FIXME: auto-generated method stub
		return null;
	}

}